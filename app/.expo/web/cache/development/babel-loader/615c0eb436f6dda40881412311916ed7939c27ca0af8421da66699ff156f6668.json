{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nfunction simulateAuthentication(_x, _x2) {\n  return _simulateAuthentication.apply(this, arguments);\n}\nfunction _simulateAuthentication() {\n  _simulateAuthentication = _asyncToGenerator(function* (email, password) {\n    var alunos = [{\n      email: 'aluno',\n      password: '123'\n    }];\n    var professores = [{\n      email: 'professor',\n      password: '123'\n    }];\n    var isAluno = alunos.some(function (credencial) {\n      return credencial.email === email && credencial.password === password;\n    });\n    var isProfessor = professores.some(function (credencial) {\n      return credencial.email === email && credencial.password === password;\n    });\n    if (isAluno) {\n      return 'aluno';\n    } else if (isProfessor) {\n      return 'professor';\n    } else {\n      return 'invalid';\n    }\n  });\n  return _simulateAuthentication.apply(this, arguments);\n}","map":{"version":3,"names":["simulateAuthentication","_x","_x2","_simulateAuthentication","apply","arguments","_asyncToGenerator","email","password","alunos","professores","isAluno","some","credencial","isProfessor"],"sources":["C:/Users/gabriel_ao_silva/SA_2023_3B_SesiSenai_Ambientes/app/src/components/Authenticate/index.tsx"],"sourcesContent":["// Função de simulação de autenticação\r\nasync function simulateAuthentication(email, password) {\r\n    // Aqui você pode definir regras de autenticação temporárias para fins de teste.\r\n    // Por exemplo, você pode verificar se o email e a senha correspondem a um valor específico.\r\n    // Lembre-se de que esta é apenas uma simulação temporária e não deve ser usada em um ambiente de produção.\r\n\r\n    const alunos = [\r\n        { email: 'aluno', password: '123' },\r\n    ];\r\n\r\n    const professores = [\r\n        { email: 'professor', password: '123' },\r\n    ];\r\n\r\n    const isAluno = alunos.some((credencial) => {\r\n        return credencial.email === email && credencial.password === password;\r\n    });\r\n\r\n    const isProfessor = professores.some((credencial) => {\r\n        return credencial.email === email && credencial.password === password;\r\n    });\r\n\r\n    if (isAluno) {\r\n        return 'aluno'; // Credenciais de aluno\r\n    } else if (isProfessor) {\r\n        return 'professor'; // Credenciais de professor\r\n    } else {\r\n        return 'invalid'; // Credenciais inválidas\r\n    }\r\n}\r\n"],"mappings":";SACeA,sBAAsBA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,uBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,wBAAA;EAAAA,uBAAA,GAAAG,iBAAA,CAArC,WAAsCC,KAAK,EAAEC,QAAQ,EAAE;IAKnD,IAAMC,MAAM,GAAG,CACX;MAAEF,KAAK,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAAM,CAAC,CACtC;IAED,IAAME,WAAW,GAAG,CAChB;MAAEH,KAAK,EAAE,WAAW;MAAEC,QAAQ,EAAE;IAAM,CAAC,CAC1C;IAED,IAAMG,OAAO,GAAGF,MAAM,CAACG,IAAI,CAAC,UAACC,UAAU,EAAK;MACxC,OAAOA,UAAU,CAACN,KAAK,KAAKA,KAAK,IAAIM,UAAU,CAACL,QAAQ,KAAKA,QAAQ;IACzE,CAAC,CAAC;IAEF,IAAMM,WAAW,GAAGJ,WAAW,CAACE,IAAI,CAAC,UAACC,UAAU,EAAK;MACjD,OAAOA,UAAU,CAACN,KAAK,KAAKA,KAAK,IAAIM,UAAU,CAACL,QAAQ,KAAKA,QAAQ;IACzE,CAAC,CAAC;IAEF,IAAIG,OAAO,EAAE;MACT,OAAO,OAAO;IAClB,CAAC,MAAM,IAAIG,WAAW,EAAE;MACpB,OAAO,WAAW;IACtB,CAAC,MAAM;MACH,OAAO,SAAS;IACpB;EACJ,CAAC;EAAA,OAAAX,uBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}