{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Pessoas() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    pessoas = _useState2[0],\n    setPessoas = _useState2[1];\n  useEffect(function () {\n    setPessoas([{\n      nome: 'João Silva',\n      email: 'joao@example.com'\n    }, {\n      nome: 'Maria Souza',\n      email: 'maria@example.com'\n    }]);\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.contentContainer,\n      children: pessoas.length === 0 ? _jsx(View, {\n        style: styles.centralize,\n        children: _jsx(Text, {\n          style: styles.message,\n          children: \"Ainda n\\xE3o h\\xE1 nenhuma pessoa registrada\"\n        })\n      }) : pessoas.map(function (pessoa, index) {\n        return _jsxs(View, {\n          style: styles.pessoaContainer,\n          children: [_jsx(Text, {\n            style: styles.nomePessoa,\n            children: pessoa.nome\n          }), _jsx(Text, {\n            style: styles.emailPessoa,\n            children: pessoa.email\n          })]\n        }, index);\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  centralize: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  contentContainer: {\n    flexGrow: 1\n  },\n  message: {\n    fontSize: 20\n  },\n  pessoaContainer: {\n    backgroundColor: '#f8f4f4',\n    margin: 10,\n    borderRadius: 10,\n    padding: 10\n  },\n  nomePessoa: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  emailPessoa: {\n    fontSize: 16\n  }\n});\nfunction adicionarPessoa(novaPessoa) {}","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Text","ScrollView","jsx","_jsx","jsxs","_jsxs","Pessoas","_useState","_useState2","_slicedToArray","pessoas","setPessoas","nome","email","style","styles","container","children","contentContainerStyle","contentContainer","length","centralize","message","map","pessoa","index","pessoaContainer","nomePessoa","emailPessoa","create","flex","backgroundColor","justifyContent","alignItems","flexGrow","fontSize","margin","borderRadius","padding","fontWeight","adicionarPessoa","novaPessoa"],"sources":["C:/Users/gabriel_ao_silva/SA_2023_3B_SesiSenai_Ambientes/app/src/screens/Pessoas/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Text, ScrollView } from 'react-native';\r\n\r\nexport function Pessoas() {\r\n    const [pessoas, setPessoas] = useState([]); // Estado para armazenar a lista de pessoas\r\n\r\n    // Simule o carregamento de algumas pessoas (você pode preenchê-las com os dados reais)\r\n    useEffect(() => {\r\n        setPessoas([\r\n            { nome: 'João Silva', email: 'joao@example.com' },\r\n            { nome: 'Maria Souza', email: 'maria@example.com' },\r\n            // Adicione mais pessoas conforme necessário\r\n        ]);\r\n    }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ScrollView contentContainerStyle={styles.contentContainer}>\r\n                {pessoas.length === 0 ? (\r\n                    <View style={styles.centralize}>\r\n                        <Text style={styles.message}>Ainda não há nenhuma pessoa registrada</Text>\r\n                    </View>\r\n                ) : (\r\n                    pessoas.map((pessoa, index) => (\r\n                        <View key={index} style={styles.pessoaContainer}>\r\n                            <Text style={styles.nomePessoa}>{pessoa.nome}</Text>\r\n                            <Text style={styles.emailPessoa}>{pessoa.email}</Text>\r\n                        </View>\r\n                    ))\r\n                )}\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"white\",\r\n    },\r\n    centralize: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    contentContainer: {\r\n        flexGrow: 1,\r\n    },\r\n    message: {\r\n        fontSize: 20,\r\n    },\r\n    pessoaContainer: {\r\n        backgroundColor: '#f8f4f4', // Cor de fundo para a pessoa\r\n        margin: 10,\r\n        borderRadius: 10, // Borda arredondada\r\n        padding: 10,\r\n    },\r\n    nomePessoa: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n    emailPessoa: {\r\n        fontSize: 16,\r\n    },\r\n});\r\n\r\n// Função para adicionar uma pessoa à lista (se necessário)\r\nfunction adicionarPessoa(novaPessoa) {\r\n    // Implemente a lógica para adicionar uma pessoa à lista de pessoas\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGnD,OAAO,SAASC,OAAOA,CAAA,EAAG;EACtB,IAAAC,SAAA,GAA8BX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAG1BX,SAAS,CAAC,YAAM;IACZc,UAAU,CAAC,CACP;MAAEC,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAmB,CAAC,EACjD;MAAED,IAAI,EAAE,aAAa;MAAEC,KAAK,EAAE;IAAoB,CAAC,CAEtD,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OACIV,IAAA,CAACL,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC1Bd,IAAA,CAACF,UAAU;MAACiB,qBAAqB,EAAEH,MAAM,CAACI,gBAAiB;MAAAF,QAAA,EACtDP,OAAO,CAACU,MAAM,KAAK,CAAC,GACjBjB,IAAA,CAACL,IAAI;QAACgB,KAAK,EAAEC,MAAM,CAACM,UAAW;QAAAJ,QAAA,EAC3Bd,IAAA,CAACH,IAAI;UAACc,KAAK,EAAEC,MAAM,CAACO,OAAQ;UAAAL,QAAA,EAAC;QAAsC,CAAM;MAAC,CACxE,CAAC,GAEPP,OAAO,CAACa,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK;QAAA,OACtBpB,KAAA,CAACP,IAAI;UAAagB,KAAK,EAAEC,MAAM,CAACW,eAAgB;UAAAT,QAAA,GAC5Cd,IAAA,CAACH,IAAI;YAACc,KAAK,EAAEC,MAAM,CAACY,UAAW;YAAAV,QAAA,EAAEO,MAAM,CAACZ;UAAI,CAAO,CAAC,EACpDT,IAAA,CAACH,IAAI;YAACc,KAAK,EAAEC,MAAM,CAACa,WAAY;YAAAX,QAAA,EAAEO,MAAM,CAACX;UAAK,CAAO,CAAC;QAAA,GAF/CY,KAGL,CAAC;MAAA,CACV;IACJ,CACO;EAAC,CACX,CAAC;AAEf;AAEA,IAAMV,MAAM,GAAGhB,UAAU,CAAC8B,MAAM,CAAC;EAC7Bb,SAAS,EAAE;IACPc,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACrB,CAAC;EACDV,UAAU,EAAE;IACRS,IAAI,EAAE,CAAC;IACPE,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB,CAAC;EACDd,gBAAgB,EAAE;IACde,QAAQ,EAAE;EACd,CAAC;EACDZ,OAAO,EAAE;IACLa,QAAQ,EAAE;EACd,CAAC;EACDT,eAAe,EAAE;IACbK,eAAe,EAAE,SAAS;IAC1BK,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE;EACb,CAAC;EACDX,UAAU,EAAE;IACRQ,QAAQ,EAAE,EAAE;IACZI,UAAU,EAAE;EAChB,CAAC;EACDX,WAAW,EAAE;IACTO,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC;AAGF,SAASK,eAAeA,CAACC,UAAU,EAAE,CAErC"},"metadata":{},"sourceType":"module","externalDependencies":[]}