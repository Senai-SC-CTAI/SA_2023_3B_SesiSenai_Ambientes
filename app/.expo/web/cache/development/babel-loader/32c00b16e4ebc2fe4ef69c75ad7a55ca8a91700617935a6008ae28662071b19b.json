{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport imageToAdd from \"../../../assets/paper-plane.png\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Ambientes() {\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    ambientes = _useState2[0],\n    setAmbientes = _useState2[1];\n  var adicionarAmbiente = function adicionarAmbiente(novoAmbiente) {\n    setAmbientes([].concat(_toConsumableArray(ambientes), [novoAmbiente]));\n  };\n  var handleAdicionar = function handleAdicionar() {\n    navigation.navigate('TelaDeCriacaoDeAmbiente', {\n      adicionarAmbiente: adicionarAmbiente\n    });\n  };\n  useEffect(function () {\n    setAmbientes([{\n      nome: 'Ambiente 1',\n      imagem: require('caminho_para_imagem_1')\n    }, {\n      nome: 'Ambiente 2',\n      imagem: require('caminho_para_imagem_2')\n    }]);\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.contentContainer,\n      children: ambientes.length === 0 ? _jsxs(View, {\n        style: styles.centralize,\n        children: [_jsx(Image, {\n          source: imageToAdd,\n          style: styles.image\n        }), _jsx(Text, {\n          style: styles.message,\n          children: \"N\\xE3o h\\xE1 Ambientes criados\"\n        })]\n      }) : ambientes.map(function (ambiente, index) {\n        return _jsxs(View, {\n          style: styles.ambienteContainer,\n          children: [_jsx(Image, {\n            source: ambiente.imagem,\n            style: styles.ambienteImage\n          }), _jsx(Text, {\n            style: styles.ambienteName,\n            children: ambiente.nome\n          })]\n        }, index);\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    justifyContent: \"center\"\n  },\n  centralize: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  image: {\n    height: 150,\n    width: 150,\n    marginBottom: 20\n  },\n  contentContainer: {\n    flexGrow: 1\n  },\n  ambienteContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  ambienteImage: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 10\n  },\n  ambienteName: {\n    fontSize: 18,\n    flex: 1\n  },\n  reservarButton: {\n    backgroundColor: '#005caa',\n    borderRadius: 5,\n    padding: 5\n  },\n  reservarButtonText: {\n    color: 'white'\n  },\n  addButton: {\n    position: 'absolute',\n    bottom: 20,\n    right: 20,\n    backgroundColor: '#005caa',\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 5\n  },\n  addButtonText: {\n    color: 'white',\n    fontSize: 30\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Text","Image","ScrollView","imageToAdd","useNavigation","jsx","_jsx","jsxs","_jsxs","Ambientes","navigation","_useState","_useState2","_slicedToArray","ambientes","setAmbientes","adicionarAmbiente","novoAmbiente","concat","_toConsumableArray","handleAdicionar","navigate","nome","imagem","require","style","styles","container","children","contentContainerStyle","contentContainer","length","centralize","source","image","message","map","ambiente","index","ambienteContainer","ambienteImage","ambienteName","create","flex","backgroundColor","justifyContent","alignItems","height","width","marginBottom","flexGrow","flexDirection","padding","borderBottomWidth","borderBottomColor","borderRadius","marginRight","fontSize","reservarButton","reservarButtonText","color","addButton","position","bottom","right","elevation","addButtonText"],"sources":["C:/Users/gabriel_ao_silva/SA_2023_3B_SesiSenai_Ambientes/app/src/screens/Ambientes/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Text, Image, ScrollView, TouchableOpacity } from 'react-native';\r\nimport imageToAdd from \"../../../assets/paper-plane.png\";\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport function Ambientes() {\r\n    const navigation = useNavigation();\r\n    const [ambientes, setAmbientes] = useState([]); // Estado para armazenar a lista de ambientes\r\n\r\n    // Função para adicionar um ambiente à lista\r\n    const adicionarAmbiente = (novoAmbiente) => {\r\n        setAmbientes([...ambientes, novoAmbiente]);\r\n    };\r\n\r\n    const handleAdicionar = () => {\r\n        // Navegue para a tela de criação de ambiente e passe a função adicionarAmbiente como parâmetro\r\n        navigation.navigate('TelaDeCriacaoDeAmbiente', { adicionarAmbiente });\r\n    };\r\n\r\n // Simule a criação de alguns ambientes (você pode preenchê-los com os dados reais)\r\n useEffect(() => {\r\n    setAmbientes([\r\n        { nome: 'Ambiente 1', imagem: require('caminho_para_imagem_1') },\r\n        { nome: 'Ambiente 2', imagem: require('caminho_para_imagem_2') },\r\n        // Adicione mais ambientes conforme necessário\r\n    ]);\r\n}, []);\r\n\r\nreturn (\r\n    <View style={styles.container}>\r\n        <ScrollView contentContainerStyle={styles.contentContainer}>\r\n            {ambientes.length === 0 ? (\r\n                <View style={styles.centralize}>\r\n                    <Image source={imageToAdd} style={styles.image} />\r\n                    <Text style={styles.message}>Não há Ambientes criados</Text>\r\n                </View>\r\n            ) : (\r\n                // Mapeie a lista de ambientes e exiba cada um na tela\r\n                ambientes.map((ambiente, index) => (\r\n                    <View key={index} style={styles.ambienteContainer}>\r\n                        <Image source={ambiente.imagem} style={styles.ambienteImage} />\r\n                        <Text style={styles.ambienteName}>{ambiente.nome}</Text>\r\n                        {/* Botão \"Reservar\" ou outras ações, se necessário */}\r\n                    </View>\r\n                ))\r\n            )}\r\n        </ScrollView>\r\n    </View>\r\n);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"white\",\r\n        justifyContent: \"center\",\r\n    },\r\n    centralize: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    image: {\r\n        height: 150,\r\n        width: 150,\r\n        marginBottom: 20,\r\n    },\r\n    contentContainer: {\r\n        flexGrow: 1,\r\n    },\r\n    ambienteContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n    },\r\n    ambienteImage: {\r\n        width: 50,\r\n        height: 50,\r\n        borderRadius: 25, \r\n        marginRight: 10,\r\n    },\r\n    ambienteName: {\r\n        fontSize: 18,\r\n        flex: 1, \r\n    },\r\n    reservarButton: {\r\n        backgroundColor: '#005caa',\r\n        borderRadius: 5,\r\n        padding: 5,\r\n    },\r\n    reservarButtonText: {\r\n        color: 'white',\r\n    },\r\n\r\n    addButton: {\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        backgroundColor: '#005caa',\r\n        width: 50,\r\n        height: 50,\r\n        borderRadius: 25,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        elevation: 5,\r\n    },\r\n    addButtonText: {\r\n        color: 'white',\r\n        fontSize: 30,\r\n    },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}