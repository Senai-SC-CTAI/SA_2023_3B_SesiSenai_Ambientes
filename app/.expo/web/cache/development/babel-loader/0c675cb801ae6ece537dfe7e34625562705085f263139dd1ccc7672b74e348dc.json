{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar editarNome = function () {\n  var _ref = _asyncToGenerator(function* (email, novoNome) {\n    try {\n      var response = yield axios.put('http://localhost:8090/api/editarPerfil', {\n        email: email,\n        nome: novoNome\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Erro ao editar perfil do usuário', error);\n      alert('Erro ao editar perfil do usuário.');\n    }\n  });\n  return function editarNome(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport function EditarPerfil(_ref2) {\n  var route = _ref2.route;\n  var _route$params = route.params,\n    userEmail = _route$params.userEmail,\n    userNome = _route$params.userNome;\n  var _useState = useState(userNome),\n    _useState2 = _slicedToArray(_useState, 2),\n    novoNome = _useState2[0],\n    setNovoNome = _useState2[1];\n  var handleEditarPerfil = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var response = yield editarNome(userEmail, novoNome);\n      if (response) {\n        alert('Perfil editado com sucesso.');\n      } else {\n        alert('Erro ao editar perfil do usuário.');\n      }\n    });\n    return function handleEditarPerfil() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      placeholder: \"Novo nome\",\n      value: novoNome,\n      onChangeText: function onChangeText(text) {\n        return setNovoNome(text);\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: handleEditarPerfil,\n      children: _jsx(Text, {\n        children: \"Salvar\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","TextInput","TouchableOpacity","Text","axios","jsx","_jsx","jsxs","_jsxs","editarNome","_ref","_asyncToGenerator","email","novoNome","response","put","nome","data","error","console","alert","_x","_x2","apply","arguments","EditarPerfil","_ref2","route","_route$params","params","userEmail","userNome","_useState","_useState2","_slicedToArray","setNovoNome","handleEditarPerfil","_ref3","children","placeholder","value","onChangeText","text","onPress"],"sources":["C:/Users/gbaol/sa/SA_2023_3B_SesiSenai_Ambientes/app/src/screens/EditarPerfil/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, TouchableOpacity, Text } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst editarNome = async (email, novoNome) => {\r\n    try {\r\n        const response = await axios.put('http://localhost:8090/api/editarPerfil', {\r\n            email: email,\r\n            nome: novoNome,\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Erro ao editar perfil do usuário', error);\r\n        alert('Erro ao editar perfil do usuário.');\r\n    }\r\n};\r\n\r\nexport function EditarPerfil({ route }) {\r\n    const { userEmail, userNome } = route.params;\r\n    const [novoNome, setNovoNome] = useState(userNome);\r\n\r\n    const handleEditarPerfil = async () => {\r\n        const response = await editarNome(userEmail, novoNome);\r\n        if (response) {\r\n            alert('Perfil editado com sucesso.');\r\n        } else {\r\n            alert('Erro ao editar perfil do usuário.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View>\r\n            <TextInput\r\n                placeholder=\"Novo nome\"\r\n                value={novoNome}\r\n                onChangeText={(text) => setNovoNome(text)}\r\n            />\r\n            <TouchableOpacity onPress={handleEditarPerfil}>\r\n                <Text>Salvar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAExC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI1B,IAAMC,UAAU;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAK,EAAEC,QAAQ,EAAK;IAC1C,IAAI;MACA,IAAMC,QAAQ,SAASV,KAAK,CAACW,GAAG,CAAC,wCAAwC,EAAE;QACvEH,KAAK,EAAEA,KAAK;QACZI,IAAI,EAAEH;MACV,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACG,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDE,KAAK,CAAC,mCAAmC,CAAC;IAC9C;EACJ,CAAC;EAAA,gBAXKX,UAAUA,CAAAY,EAAA,EAAAC,GAAA;IAAA,OAAAZ,IAAA,CAAAa,KAAA,OAAAC,SAAA;EAAA;AAAA,GAWf;AAED,OAAO,SAASC,YAAYA,CAAAC,KAAA,EAAY;EAAA,IAATC,KAAK,GAAAD,KAAA,CAALC,KAAK;EAChC,IAAAC,aAAA,GAAgCD,KAAK,CAACE,MAAM;IAApCC,SAAS,GAAAF,aAAA,CAATE,SAAS;IAAEC,QAAQ,GAAAH,aAAA,CAARG,QAAQ;EAC3B,IAAAC,SAAA,GAAgCjC,QAAQ,CAACgC,QAAQ,CAAC;IAAAE,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CnB,QAAQ,GAAAoB,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,kBAAkB;IAAA,IAAAC,KAAA,GAAA1B,iBAAA,CAAG,aAAY;MACnC,IAAMG,QAAQ,SAASL,UAAU,CAACqB,SAAS,EAAEjB,QAAQ,CAAC;MACtD,IAAIC,QAAQ,EAAE;QACVM,KAAK,CAAC,6BAA6B,CAAC;MACxC,CAAC,MAAM;QACHA,KAAK,CAAC,mCAAmC,CAAC;MAC9C;IACJ,CAAC;IAAA,gBAPKgB,kBAAkBA,CAAA;MAAA,OAAAC,KAAA,CAAAd,KAAA,OAAAC,SAAA;IAAA;EAAA,GAOvB;EAED,OACIhB,KAAA,CAACR,IAAI;IAAAsC,QAAA,GACDhC,IAAA,CAACL,SAAS;MACNsC,WAAW,EAAC,WAAW;MACvBC,KAAK,EAAE3B,QAAS;MAChB4B,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKP,WAAW,CAACO,IAAI,CAAC;MAAA;IAAC,CAC7C,CAAC,EACFpC,IAAA,CAACJ,gBAAgB;MAACyC,OAAO,EAAEP,kBAAmB;MAAAE,QAAA,EAC1ChC,IAAA,CAACH,IAAI;QAAAmC,QAAA,EAAC;MAAM,CAAM;IAAC,CACL,CAAC;EAAA,CACjB,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}