{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Ambientes() {\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    ambientes = _useState2[0],\n    setAmbientes = _useState2[1];\n  useEffect(function () {\n    fetch('http://localhost:8090/ambiente').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setAmbientes(data);\n    });\n  }, []);\n  var handleReserve = function handleReserve(ambiente) {};\n  return _jsx(View, {\n    children: ambientes.length === 0 ? _jsx(Text, {\n      children: \"Ainda n\\xE3o h\\xE1 nenhum ambiente\"\n    }) : ambientes.map(function (ambiente, index) {\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: ambiente.nome\n        }), _jsx(Text, {\n          children: ambiente.descricao\n        }), _jsx(Button, {\n          title: \"Reservar\",\n          onPress: function onPress() {\n            return handleReserve(ambiente);\n          }\n        })]\n      }, index);\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: '#f5f5f5'\n  },\n  textoVazio: {\n    textAlign: 'center',\n    color: '#333',\n    fontSize: 18\n  },\n  item: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  },\n  nome: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  descricao: {\n    fontSize: 16,\n    color: '#666'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Text","Button","useNavigation","jsx","_jsx","jsxs","_jsxs","Ambientes","navigation","_useState","_useState2","_slicedToArray","ambientes","setAmbientes","fetch","then","response","json","data","handleReserve","ambiente","children","length","map","index","nome","descricao","title","onPress","styles","create","container","flex","padding","backgroundColor","textoVazio","textAlign","color","fontSize","item","borderRadius","marginBottom","fontWeight"],"sources":["C:/Users/gbaol/SA_2023_3B_SesiSenai_Ambientes/app/src/screens/Ambientes/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Text, Button, TextInput} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport function Ambientes() {\r\n    const navigation = useNavigation();\r\n    const [ambientes, setAmbientes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8090/ambiente')\r\n            .then(response => response.json())\r\n            .then(data => setAmbientes(data));\r\n    }, []);\r\n  \r\n    const handleReserve = (ambiente) => {\r\n        // Implemente a lógica de reserva aqui\r\n    };\r\n  \r\n    return (\r\n        <View>\r\n            {ambientes.length === 0 ? (\r\n                <Text>Ainda não há nenhum ambiente</Text>\r\n            ) : (\r\n                ambientes.map((ambiente, index) => (\r\n                    <View key={index}>\r\n                        <Text>{ambiente.nome}</Text>\r\n                        <Text>{ambiente.descricao}</Text>\r\n                        <Button title=\"Reservar\" onPress={() => handleReserve(ambiente)} />\r\n                    </View>\r\n                ))\r\n            )}\r\n        </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 10,\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    textoVazio: {\r\n        textAlign: 'center',\r\n        color: '#333',\r\n        fontSize: 18,\r\n    },\r\n    item: {\r\n        backgroundColor: '#fff',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n    },\r\n    nome: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n    },\r\n    descricao: {\r\n        fontSize: 16,\r\n        color: '#666',\r\n    },\r\n});"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAEnD,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,OAAO,SAASC,SAASA,CAAA,EAAG;EACxB,IAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;EAClC,IAAAO,SAAA,GAAkCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9Bb,SAAS,CAAC,YAAM;IACZiB,KAAK,CAAC,gCAAgC,CAAC,CAClCC,IAAI,CAAC,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAAA,EAAC,CACjCF,IAAI,CAAC,UAAAG,IAAI;MAAA,OAAIL,YAAY,CAACK,IAAI,CAAC;IAAA,EAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,QAAQ,EAAK,CAEpC,CAAC;EAED,OACIhB,IAAA,CAACN,IAAI;IAAAuB,QAAA,EACAT,SAAS,CAACU,MAAM,KAAK,CAAC,GACnBlB,IAAA,CAACJ,IAAI;MAAAqB,QAAA,EAAC;IAA4B,CAAM,CAAC,GAEzCT,SAAS,CAACW,GAAG,CAAC,UAACH,QAAQ,EAAEI,KAAK;MAAA,OAC1BlB,KAAA,CAACR,IAAI;QAAAuB,QAAA,GACDjB,IAAA,CAACJ,IAAI;UAAAqB,QAAA,EAAED,QAAQ,CAACK;QAAI,CAAO,CAAC,EAC5BrB,IAAA,CAACJ,IAAI;UAAAqB,QAAA,EAAED,QAAQ,CAACM;QAAS,CAAO,CAAC,EACjCtB,IAAA,CAACH,MAAM;UAAC0B,KAAK,EAAC,UAAU;UAACC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMT,aAAa,CAACC,QAAQ,CAAC;UAAA;QAAC,CAAE,CAAC;MAAA,GAH5DI,KAIL,CAAC;IAAA,CACV;EACJ,CACC,CAAC;AAEf;AAEA,IAAMK,MAAM,GAAG9B,UAAU,CAAC+B,MAAM,CAAC;EAC7BC,SAAS,EAAE;IACPC,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACrB,CAAC;EACDC,UAAU,EAAE;IACRC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE;EACd,CAAC;EACDC,IAAI,EAAE;IACFL,eAAe,EAAE,MAAM;IACvBM,YAAY,EAAE,CAAC;IACfP,OAAO,EAAE,EAAE;IACXQ,YAAY,EAAE;EAClB,CAAC;EACDhB,IAAI,EAAE;IACFa,QAAQ,EAAE,EAAE;IACZI,UAAU,EAAE;EAChB,CAAC;EACDhB,SAAS,EAAE;IACPY,QAAQ,EAAE,EAAE;IACZD,KAAK,EAAE;EACX;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}