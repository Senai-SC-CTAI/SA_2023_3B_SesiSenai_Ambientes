{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport imageToAdd from \"../../../assets/paper-plane.png\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Ambientes() {\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    ambientes = _useState2[0],\n    setAmbientes = _useState2[1];\n  useEffect(function () {\n    setAmbientes([{\n      nome: 'Sala de Reunião',\n      imagem: require(\"../../../assets/reuniao.png\")\n    }, {\n      nome: 'Laboratório',\n      imagem: require(\"../../../assets/laboratorio.png\")\n    }]);\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.contentContainer,\n      children: ambientes.length === 0 ? _jsxs(View, {\n        style: styles.centralize,\n        children: [_jsx(\"img\", {\n          src: imageToAdd,\n          style: styles.image\n        }), _jsx(Text, {\n          style: styles.message,\n          children: \"N\\xE3o h\\xE1 Ambientes criados\"\n        })]\n      }) : ambientes.map(function (ambiente, index) {\n        return _jsxs(View, {\n          style: styles.ambienteContainer,\n          children: [_jsx(Text, {\n            style: styles.ambienteName,\n            children: ambiente.nome\n          }), _jsx(View, {\n            style: styles.ambienteContent,\n            children: _jsx(\"img\", {\n              src: ambiente.imagem,\n              style: styles.ambienteImage\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.reservarButton,\n            onPress: function onPress() {\n              return reservarAmbiente(ambiente);\n            },\n            children: _jsx(Text, {\n              style: styles.reservarButtonText,\n              children: \"Reservar\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.reservarButton,\n            onPress: function onPress() {\n              return reservarAmbiente(ambiente);\n            },\n            children: _jsx(Text, {\n              style: styles.reservarButtonText,\n              children: \"Informa\\xE7\\xF5es\"\n            })\n          })]\n        }, index);\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  centralize: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  image: {\n    height: 150,\n    width: 150,\n    marginBottom: 20\n  },\n  contentContainer: {\n    flexGrow: 1\n  },\n  ambienteContainer: {\n    backgroundColor: '#f8f4f4',\n    margin: 10,\n    borderRadius: 10,\n    overflow: 'hidden'\n  },\n  ambienteContent: {\n    alignItems: 'center',\n    paddingTop: 10\n  },\n  ambienteImage: {\n    width: '100%',\n    height: '100%'\n  },\n  ambienteName: {\n    fontSize: 18,\n    marginTop: 5,\n    alignSelf: 'center'\n  },\n  reservarButton: {\n    backgroundColor: '#005caa',\n    padding: 10,\n    borderTopColor: 'black',\n    borderTopWidth: 5\n  },\n  reservarButtonText: {\n    color: 'white',\n    textAlign: 'center'\n  },\n  message: {\n    fontSize: 20\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Text","ScrollView","TouchableOpacity","imageToAdd","useNavigation","jsx","_jsx","jsxs","_jsxs","Ambientes","navigation","_useState","_useState2","_slicedToArray","ambientes","setAmbientes","nome","imagem","require","style","styles","container","children","contentContainerStyle","contentContainer","length","centralize","src","image","message","map","ambiente","index","ambienteContainer","ambienteName","ambienteContent","ambienteImage","reservarButton","onPress","reservarAmbiente","reservarButtonText","create","flex","backgroundColor","justifyContent","alignItems","height","width","marginBottom","flexGrow","margin","borderRadius","overflow","paddingTop","fontSize","marginTop","alignSelf","padding","borderTopColor","borderTopWidth","color","textAlign"],"sources":["C:/Users/gabriel_ao_silva/SA_2023_3B_SesiSenai_Ambientes/app/src/screens/Ambientes/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Text, Image, ScrollView, TouchableOpacity } from 'react-native';\r\nimport imageToAdd from \"../../../assets/paper-plane.png\";\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport function Ambientes() {\r\n    const navigation = useNavigation();\r\n    const [ambientes, setAmbientes] = useState([]);\r\n\r\n useEffect(() => {\r\n    setAmbientes([\r\n        { nome: 'Sala de Reunião', imagem: require('../../../assets/reuniao.png') },\r\n        { nome: 'Laboratório', imagem: require('../../../assets/laboratorio.png') },\r\n    ]);\r\n}, []);\r\n\r\nreturn (\r\n    <View style={styles.container}>\r\n        <ScrollView contentContainerStyle={styles.contentContainer}>\r\n            {ambientes.length === 0 ? (\r\n                <View style={styles.centralize}>\r\n                    <img src={imageToAdd} style={styles.image} />\r\n                    <Text style={styles.message}>Não há Ambientes criados</Text>\r\n                </View>\r\n            ) : (\r\n                // Mapeie a lista de ambientes e exiba cada um na tela\r\n                ambientes.map((ambiente, index) => (\r\n                    <View key={index} style={styles.ambienteContainer}>\r\n                        <Text style={styles.ambienteName}>{ambiente.nome}</Text>\r\n                        <View style={styles.ambienteContent}>\r\n                          <img src={ambiente.imagem} style={styles.ambienteImage} />\r\n                        </View>\r\n                        <TouchableOpacity style={styles.reservarButton} onPress={() => reservarAmbiente(ambiente)}>\r\n                            <Text style={styles.reservarButtonText}>Reservar</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity style={styles.reservarButton} onPress={() => reservarAmbiente(ambiente)}>\r\n                            <Text style={styles.reservarButtonText}>Informações</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                ))\r\n            )}\r\n        </ScrollView>\r\n    </View>\r\n);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"white\",\r\n    },\r\n    centralize: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    image: {\r\n        height: 150,\r\n        width: 150,\r\n        marginBottom: 20,\r\n    },\r\n    contentContainer: {\r\n        flexGrow: 1,\r\n    },\r\n    ambienteContainer: {\r\n        backgroundColor: '#f8f4f4', // Cor de fundo para o quadrado\r\n        margin: 10,\r\n        borderRadius: 10, // Borda arredondada\r\n        overflow: 'hidden', // Para cortar qualquer conteúdo que saia dos limites\r\n    },\r\n    ambienteContent: {\r\n        alignItems: 'center',\r\n        paddingTop: 10,\r\n    },\r\n    ambienteImage: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    ambienteName: {\r\n        fontSize: 18,\r\n        marginTop: 5,\r\n        alignSelf: 'center'\r\n    },\r\n    reservarButton: {\r\n        backgroundColor: '#005caa',\r\n        padding: 10,\r\n        borderTopColor: 'black',\r\n        borderTopWidth: 5,\r\n    },\r\n    reservarButtonText: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n    },\r\n    message: {\r\n        fontSize: 20,\r\n    },\r\n});"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAEnD,OAAOC,UAAU;AACjB,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,OAAO,SAASC,SAASA,CAAA,EAAG;EACxB,IAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;EAClC,IAAAO,SAAA,GAAkCf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAEjCf,SAAS,CAAC,YAAM;IACbkB,YAAY,CAAC,CACT;MAAEC,IAAI,EAAE,iBAAiB;MAAEC,MAAM,EAAEC,OAAO,8BAA8B;IAAE,CAAC,EAC3E;MAAEF,IAAI,EAAE,aAAa;MAAEC,MAAM,EAAEC,OAAO,kCAAkC;IAAE,CAAC,CAC9E,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OACIZ,IAAA,CAACR,IAAI;IAACqB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC1BhB,IAAA,CAACL,UAAU;MAACsB,qBAAqB,EAAEH,MAAM,CAACI,gBAAiB;MAAAF,QAAA,EACtDR,SAAS,CAACW,MAAM,KAAK,CAAC,GACnBjB,KAAA,CAACV,IAAI;QAACqB,KAAK,EAAEC,MAAM,CAACM,UAAW;QAAAJ,QAAA,GAC3BhB,IAAA;UAAKqB,GAAG,EAAExB,UAAW;UAACgB,KAAK,EAAEC,MAAM,CAACQ;QAAM,CAAE,CAAC,EAC7CtB,IAAA,CAACN,IAAI;UAACmB,KAAK,EAAEC,MAAM,CAACS,OAAQ;UAAAP,QAAA,EAAC;QAAwB,CAAM,CAAC;MAAA,CAC1D,CAAC,GAGPR,SAAS,CAACgB,GAAG,CAAC,UAACC,QAAQ,EAAEC,KAAK;QAAA,OAC1BxB,KAAA,CAACV,IAAI;UAAaqB,KAAK,EAAEC,MAAM,CAACa,iBAAkB;UAAAX,QAAA,GAC9ChB,IAAA,CAACN,IAAI;YAACmB,KAAK,EAAEC,MAAM,CAACc,YAAa;YAAAZ,QAAA,EAAES,QAAQ,CAACf;UAAI,CAAO,CAAC,EACxDV,IAAA,CAACR,IAAI;YAACqB,KAAK,EAAEC,MAAM,CAACe,eAAgB;YAAAb,QAAA,EAClChB,IAAA;cAAKqB,GAAG,EAAEI,QAAQ,CAACd,MAAO;cAACE,KAAK,EAAEC,MAAM,CAACgB;YAAc,CAAE;UAAC,CACtD,CAAC,EACP9B,IAAA,CAACJ,gBAAgB;YAACiB,KAAK,EAAEC,MAAM,CAACiB,cAAe;YAACC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMC,gBAAgB,CAACR,QAAQ,CAAC;YAAA,CAAC;YAAAT,QAAA,EACtFhB,IAAA,CAACN,IAAI;cAACmB,KAAK,EAAEC,MAAM,CAACoB,kBAAmB;cAAAlB,QAAA,EAAC;YAAQ,CAAM;UAAC,CACzC,CAAC,EACnBhB,IAAA,CAACJ,gBAAgB;YAACiB,KAAK,EAAEC,MAAM,CAACiB,cAAe;YAACC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMC,gBAAgB,CAACR,QAAQ,CAAC;YAAA,CAAC;YAAAT,QAAA,EACtFhB,IAAA,CAACN,IAAI;cAACmB,KAAK,EAAEC,MAAM,CAACoB,kBAAmB;cAAAlB,QAAA,EAAC;YAAW,CAAM;UAAC,CAC5C,CAAC;QAAA,GAVZU,KAWL,CAAC;MAAA,CACV;IACJ,CACO;EAAC,CACX,CAAC;AAEX;AAEA,IAAMZ,MAAM,GAAGrB,UAAU,CAAC0C,MAAM,CAAC;EAC7BpB,SAAS,EAAE;IACPqB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACrB,CAAC;EACDjB,UAAU,EAAE;IACRgB,IAAI,EAAE,CAAC;IACPE,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB,CAAC;EACDjB,KAAK,EAAE;IACHkB,MAAM,EAAE,GAAG;IACXC,KAAK,EAAE,GAAG;IACVC,YAAY,EAAE;EAClB,CAAC;EACDxB,gBAAgB,EAAE;IACdyB,QAAQ,EAAE;EACd,CAAC;EACDhB,iBAAiB,EAAE;IACfU,eAAe,EAAE,SAAS;IAC1BO,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE;EACd,CAAC;EACDjB,eAAe,EAAE;IACbU,UAAU,EAAE,QAAQ;IACpBQ,UAAU,EAAE;EAChB,CAAC;EACDjB,aAAa,EAAE;IACXW,KAAK,EAAE,MAAM;IACbD,MAAM,EAAE;EACZ,CAAC;EACDZ,YAAY,EAAE;IACVoB,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE;EACf,CAAC;EACDnB,cAAc,EAAE;IACZM,eAAe,EAAE,SAAS;IAC1Bc,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE,OAAO;IACvBC,cAAc,EAAE;EACpB,CAAC;EACDnB,kBAAkB,EAAE;IAChBoB,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE;EACf,CAAC;EACDhC,OAAO,EAAE;IACLyB,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}