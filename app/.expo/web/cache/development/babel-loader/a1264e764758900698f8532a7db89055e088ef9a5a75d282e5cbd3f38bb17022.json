{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Ambientes() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    ambientes = _useState2[0],\n    setAmbientes = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    ambienteEditando = _useState4[0],\n    setAmbienteEditando = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    nome = _useState6[0],\n    setNome = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    descricao = _useState8[0],\n    setDescricao = _useState8[1];\n  useEffect(function () {\n    fetch('http://localhost:8090/ambiente').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setAmbientes(data);\n    });\n  }, []);\n  var handleEdit = function handleEdit(ambiente) {\n    setNome(ambiente.nome);\n    setDescricao(ambiente.descricao);\n    setAmbienteEditando(ambiente);\n  };\n  var handleSave = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var response = yield fetch(\"http://localhost:8090/ambiente/\" + ambienteEditando.id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          nome: nome,\n          descricao: descricao\n        })\n      });\n      if (response.ok) {\n        var updatedAmbiente = yield response.json();\n        setAmbientes(ambientes.map(function (ambiente) {\n          return ambiente.id === updatedAmbiente.id ? updatedAmbiente : ambiente;\n        }));\n        setAmbienteEditando(null);\n      } else {\n        alert('Erro ao salvar ambiente');\n      }\n    });\n    return function handleSave() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(\"div\", {\n    className: \"bg-white h-screen\",\n    children: _jsx(\"div\", {\n      className: \"flex flex-col items-center justify-center w-screen bg-no-repeat bg-cover relative\",\n      children: _jsx(\"div\", {\n        className: \"flex justify-center mt-16\",\n        children: _jsxs(\"div\", {\n          className: \"container mx-auto px-4 flex flex-col items-start\",\n          children: [ambientes.length === 0 ? _jsx(\"div\", {\n            className: \"flex flex-col items-center justify-center\",\n            children: _jsx(\"p\", {\n              className: \"text-center text-gray-500\",\n              children: \"Ainda n\\xE3o h\\xE1 nenhum ambiente\"\n            })\n          }) : ambientes.map(function (ambiente, index) {\n            return _jsxs(\"div\", {\n              className: \"flex items-center\",\n              children: [_jsx(\"div\", {\n                className: \"h-12 w-12 rounded-full bg-blue-500 flex items-center justify-center text-white\",\n                children: ambiente.nome.substring(0, 2).toUpperCase()\n              }), _jsxs(\"div\", {\n                className: \"p-4\",\n                children: [_jsx(\"p\", {\n                  className: \"font-bold text-black\",\n                  children: ambiente.nome\n                }), _jsx(\"p\", {\n                  className: \"text-sm text-gray-500\",\n                  children: ambiente.descricao\n                }), _jsx(\"button\", {\n                  className: \"text-black\",\n                  onClick: function onClick() {\n                    return handleEdit(ambiente);\n                  },\n                  children: \"Editar\"\n                })]\n              })]\n            }, index);\n          }), ambienteEditando && _jsxs(\"div\", {\n            children: [_jsx(\"input\", {\n              className: \"border-2 border-black text-black\",\n              type: \"text\",\n              value: nome,\n              onChange: function onChange(e) {\n                return setNome(e.target.value);\n              }\n            }), _jsx(\"input\", {\n              className: \"border-2 border-black text-black\",\n              type: \"text\",\n              value: descricao,\n              onChange: function onChange(e) {\n                return setDescricao(e.target.value);\n              }\n            }), _jsx(\"button\", {\n              className: \"text-black\",\n              onClick: handleSave,\n              children: \"Salvar\"\n            })]\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  centralize: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  image: {\n    height: 150,\n    width: 150,\n    marginBottom: 20\n  },\n  contentContainer: {\n    flexGrow: 1\n  },\n  ambienteContainer: {\n    backgroundColor: '#f8f4f4',\n    margin: 10,\n    borderRadius: 10,\n    overflow: 'hidden'\n  },\n  ambienteContent: {\n    alignItems: 'center',\n    paddingTop: 10\n  },\n  ambienteImage: {\n    width: '100%',\n    height: '100%'\n  },\n  ambienteName: {\n    fontSize: 18,\n    marginTop: 5,\n    alignSelf: 'center'\n  },\n  reservarButton: {\n    backgroundColor: '#005caa',\n    padding: 10,\n    marginTop: 2\n  },\n  reservarButtonText: {\n    color: 'white',\n    textAlign: 'center'\n  },\n  message: {\n    fontSize: 20\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","jsx","_jsx","jsxs","_jsxs","Ambientes","_useState","_useState2","_slicedToArray","ambientes","setAmbientes","_useState3","_useState4","ambienteEditando","setAmbienteEditando","_useState5","_useState6","nome","setNome","_useState7","_useState8","descricao","setDescricao","fetch","then","response","json","data","handleEdit","ambiente","handleSave","_ref","_asyncToGenerator","id","method","headers","body","JSON","stringify","ok","updatedAmbiente","map","alert","apply","arguments","className","children","length","index","substring","toUpperCase","onClick","type","value","onChange","e","target","styles","create","container","flex","backgroundColor","centralize","justifyContent","alignItems","image","height","width","marginBottom","contentContainer","flexGrow","ambienteContainer","margin","borderRadius","overflow","ambienteContent","paddingTop","ambienteImage","ambienteName","fontSize","marginTop","alignSelf","reservarButton","padding","reservarButtonText","color","textAlign","message"],"sources":["C:/Users/gbaol/SA_2023_3B_SesiSenai_Ambientes/app/src/screens/Ambientes/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Text, Image, ScrollView, TouchableOpacity } from 'react-native';\r\nimport imageToAdd from \"../../../assets/paper-plane.png\";\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport function Ambientes() {\r\n    const [ambientes, setAmbientes] = useState([]);\r\n  const [ambienteEditando, setAmbienteEditando] = useState(null);\r\n  const [nome, setNome] = useState('');\r\n  const [descricao, setDescricao] = useState('');\r\n\r\n  useEffect(() => {\r\n      fetch('http://localhost:8090/ambiente')\r\n          .then(response => response.json())\r\n          .then(data => setAmbientes(data));\r\n  }, []);\r\n\r\n  const handleEdit = (ambiente) => {\r\n      setNome(ambiente.nome);\r\n      setDescricao(ambiente.descricao);\r\n      setAmbienteEditando(ambiente);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n      const response = await fetch(`http://localhost:8090/ambiente/${ambienteEditando.id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n              nome: nome,\r\n              descricao: descricao,\r\n          }),\r\n      });\r\n\r\n      if (response.ok) {\r\n          // Atualize a lista de ambientes\r\n          const updatedAmbiente = await response.json();\r\n          setAmbientes(ambientes.map(ambiente => ambiente.id === updatedAmbiente.id ? updatedAmbiente : ambiente));\r\n          setAmbienteEditando(null);\r\n      } else {\r\n          alert('Erro ao salvar ambiente');\r\n      }\r\n  };\r\n\r\n  return (\r\n      <div className='bg-white h-screen'>\r\n          <div className='flex flex-col items-center justify-center w-screen bg-no-repeat bg-cover relative'>\r\n              <div className=\"flex justify-center mt-16\">\r\n                  <div className=\"container mx-auto px-4 flex flex-col items-start\">\r\n                      {ambientes.length === 0 ? (\r\n                          <div className=\"flex flex-col items-center justify-center\">\r\n                              <p className=\"text-center text-gray-500\">Ainda nÃ£o hÃ¡ nenhum ambiente</p>\r\n                          </div>\r\n                      ) : (\r\n                          ambientes.map((ambiente, index) => (\r\n                              <div key={index} className=\"flex items-center\">\r\n                                  <div className=\"h-12 w-12 rounded-full bg-blue-500 flex items-center justify-center text-white\">\r\n                                      {ambiente.nome.substring(0, 2).toUpperCase()}\r\n                                  </div>\r\n                                  <div className='p-4'> \r\n                                      <p className=\"font-bold text-black\">{ambiente.nome}</p>\r\n                                      <p className=\"text-sm text-gray-500\">{ambiente.descricao}</p>\r\n                                      <button className=\"text-black\" onClick={() => handleEdit(ambiente)}>Editar</button>\r\n                                  </div>\r\n                              </div>\r\n                          ))\r\n                      )}\r\n                      {ambienteEditando && (\r\n                          <div>\r\n                              <input className=\"border-2 border-black text-black\" type=\"text\" value={nome} onChange={e => setNome(e.target.value)} />\r\n                              <input className=\"border-2 border-black text-black\" type=\"text\" value={descricao} onChange={e => setDescricao(e.target.value)} />\r\n                              <button className=\"text-black\" onClick={handleSave}>Salvar</button>\r\n                          </div>\r\n                      )}\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"white\",\r\n    },\r\n    centralize: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    image: {\r\n        height: 150,\r\n        width: 150,\r\n        marginBottom: 20,\r\n    },\r\n    contentContainer: {\r\n        flexGrow: 1,\r\n    },\r\n    ambienteContainer: {\r\n        backgroundColor: '#f8f4f4', // Cor de fundo para o quadrado\r\n        margin: 10,\r\n        borderRadius: 10, // Borda arredondada\r\n        overflow: 'hidden', // Para cortar qualquer conteÃºdo que saia dos limites\r\n    },\r\n    ambienteContent: {\r\n        alignItems: 'center',\r\n        paddingTop: 10,\r\n    },\r\n    ambienteImage: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    ambienteName: {\r\n        fontSize: 18,\r\n        marginTop: 5,\r\n        alignSelf: 'center'\r\n    },\r\n    reservarButton: {\r\n        backgroundColor: '#005caa',\r\n        padding: 10,\r\n        marginTop: 2,\r\n    },\r\n    reservarButtonText: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n    },\r\n    message: {\r\n        fontSize: 20,\r\n    },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}