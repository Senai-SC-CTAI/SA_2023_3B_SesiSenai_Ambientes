{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Perfil() {\n  var route = useRoute();\n  var navigation = useNavigation();\n  var _route$params = route.params,\n    userNome = _route$params.userNome,\n    userType = _route$params.userType,\n    userEmail = _route$params.userEmail;\n  var handleLogout = function handleLogout() {\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: 'Login'\n      }]\n    });\n  };\n  var randomColor = '#' + Math.floor(Math.random() * 16777215).toString(16);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.profileBackground,\n      children: _jsx(View, {\n        style: styles.blueBackground,\n        children: _jsxs(View, {\n          style: styles.profileSection,\n          children: [_jsx(View, {\n            style: [styles.iconContainer, {\n              backgroundColor: randomColor\n            }],\n            children: _jsx(Text, {\n              style: styles.icon,\n              children: userNome.slice(0, 2).toUpperCase()\n            })\n          }), _jsxs(View, {\n            style: styles.infoContainer,\n            children: [_jsx(Text, {\n              style: styles.name,\n              children: userNome\n            }), _jsx(Text, {\n              style: styles.role,\n              children: userType\n            }), _jsx(Text, {\n              style: styles.email,\n              children: userEmail\n            })]\n          })]\n        })\n      })\n    }), _jsxs(View, {\n      style: styles.buttonsSection,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Editar Perfil\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleLogout,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Deslogar\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Excluir Perfil\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  profileBackground: {\n    backgroundColor: '#005caa',\n    width: '100%'\n  },\n  blueBackground: {\n    paddingHorizontal: 20,\n    paddingTop: 20\n  },\n  profileSection: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: '#00357e',\n    paddingBottom: 20\n  },\n  iconContainer: {\n    borderRadius: 75,\n    padding: 10,\n    marginRight: 20\n  },\n  iconContainer: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'grey'\n  },\n  icon: {\n    color: 'white',\n    fontSize: 20\n  },\n  infoContainer: {\n    flex: 1\n  },\n  name: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  role: {\n    fontSize: 16,\n    color: '#EEEEEE'\n  },\n  email: {\n    fontSize: 12,\n    color: '#d0e1f9'\n  },\n  buttonsSection: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: '#005caa',\n    borderRadius: 6,\n    height: 45,\n    width: 200,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 12\n  },\n  buttonText: {\n    fontSize: 18,\n    color: '#fff'\n  }\n});","map":{"version":3,"names":["React","View","StyleSheet","Text","TouchableOpacity","useNavigation","useRoute","jsx","_jsx","jsxs","_jsxs","Perfil","route","navigation","_route$params","params","userNome","userType","userEmail","handleLogout","reset","index","routes","name","randomColor","Math","floor","random","toString","style","styles","container","children","profileBackground","blueBackground","profileSection","iconContainer","backgroundColor","icon","slice","toUpperCase","infoContainer","role","email","buttonsSection","button","buttonText","onPress","create","flex","width","paddingHorizontal","paddingTop","flexDirection","alignItems","borderBottomWidth","borderBottomColor","paddingBottom","borderRadius","padding","marginRight","height","justifyContent","color","fontSize","fontWeight","marginBottom"],"sources":["C:/Users/gbaol/SA_2023_3B_SesiSenai_Ambientes/app/src/screens/Perfil/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport imageToAdd from \"../../../assets/user.png\";\r\nimport { View, StyleSheet, Text, TouchableOpacity, Image } from 'react-native';\r\n\r\n\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\n\r\nexport function Perfil() {\r\n    const route = useRoute();\r\n    const navigation = useNavigation();\r\n    const { userNome, userType, userEmail } = route.params;\r\n\r\n    const handleLogout = () => {\r\n        navigation.reset({\r\n            index: 0,\r\n            routes: [{ name: 'Login' }],\r\n        });\r\n    };\r\n\r\n// Gera uma cor aleatória\r\nconst randomColor = '#' + Math.floor(Math.random()*16777215).toString(16);\r\n\r\nreturn (\r\n    <View style={styles.container}>\r\n        <View style={styles.profileBackground}>\r\n            <View style={styles.blueBackground}>\r\n                <View style={styles.profileSection}>\r\n                    <View style={[styles.iconContainer, {backgroundColor: randomColor}]}>\r\n                        <Text style={styles.icon}>{userNome.slice(0,2).toUpperCase()}</Text>\r\n                    </View>\r\n                    <View style={styles.infoContainer}> \r\n                        <Text style={styles.name}>{userNome}</Text>\r\n                        <Text style={styles.role}>{userType}</Text>\r\n                        <Text style={styles.email}>{userEmail}</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n        <View style={styles.buttonsSection}>\r\n            <TouchableOpacity style={styles.button}>\r\n                <Text style={styles.buttonText}>Editar Perfil</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.button} onPress={handleLogout}>\r\n                <Text style={styles.buttonText}>Deslogar</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.button}>\r\n                <Text style={styles.buttonText}>Excluir Perfil</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    </View>\r\n);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"white\",\r\n    },\r\n    profileBackground: {\r\n        backgroundColor: '#005caa',\r\n        width: '100%',\r\n    },\r\n    blueBackground: {\r\n        paddingHorizontal: 20,\r\n        paddingTop: 20,\r\n    },\r\n    profileSection: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#00357e',\r\n        paddingBottom: 20,\r\n    },\r\n    iconContainer: {\r\n        borderRadius: 75,\r\n        padding: 10,\r\n        marginRight: 20,\r\n    },\r\n    iconContainer: {\r\n        width: 50,\r\n        height: 50,\r\n        borderRadius: 25,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: 'grey', // cor padrão, será substituída pela cor aleatória\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n    },\r\n    infoContainer: {\r\n        flex: 1,\r\n    },\r\n    name: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color: '#fff',\r\n    },\r\n    role: {\r\n        fontSize: 16,\r\n        color: '#EEEEEE',\r\n    },\r\n    email: {\r\n        fontSize: 12,\r\n        color: '#d0e1f9',\r\n    },\r\n    buttonsSection: {\r\n        paddingHorizontal: 20,\r\n        paddingTop: 20,\r\n        alignItems: 'center', \r\n        justifyContent: 'center',\r\n    },\r\n    button: {\r\n        backgroundColor: '#005caa',\r\n        borderRadius: 6,\r\n        height: 45,\r\n        width: 200,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 12,\r\n    },\r\n    buttonText: {\r\n        fontSize: 18,\r\n        color: '#fff',\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}