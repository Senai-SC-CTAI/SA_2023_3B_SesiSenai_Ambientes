{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Reservas() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    reservas = _useState2[0],\n    setReservas = _useState2[1];\n  useEffect(function () {\n    setReservas([{\n      nomeAmbiente: 'Sala de Reunião',\n      data: '2023-10-16',\n      horario: '10:00 - 11:00'\n    }, {\n      nomeAmbiente: 'Laboratório',\n      data: '2023-10-16',\n      horario: '13:00 - 14:00'\n    }]);\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [\"reservas.map((reserva, index) => (\", _jsxs(View, {\n      style: styles.reservaContainer,\n      children: [_jsx(Text, {\n        style: styles.nomeAmbiente,\n        children: reserva.nomeAmbiente\n      }), _jsx(Text, {\n        style: styles.dataHorario,\n        children: \"Data: \" + reserva.data + \", Hor\\xE1rio: \" + reserva.horario\n      })]\n    }, index)]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  centralize: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  contentContainer: {\n    flexGrow: 1\n  },\n  message: {\n    fontSize: 20\n  },\n  reservaContainer: {\n    backgroundColor: '#f8f4f4',\n    margin: 10,\n    borderRadius: 10,\n    padding: 10\n  },\n  nomeAmbiente: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  dataHorario: {\n    fontSize: 16\n  }\n});\nfunction adicionarReserva(novaReserva) {}","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Text","jsx","_jsx","jsxs","_jsxs","Reservas","_useState","_useState2","_slicedToArray","reservas","setReservas","nomeAmbiente","data","horario","style","styles","container","children","reservaContainer","reserva","dataHorario","index","create","flex","backgroundColor","centralize","justifyContent","alignItems","contentContainer","flexGrow","message","fontSize","margin","borderRadius","padding","fontWeight","adicionarReserva","novaReserva"],"sources":["C:/Users/gbaol/sa/SA_2023_3B_SesiSenai_Ambientes/app/src/screens/Reservas/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport imageToAdd from \"../../../assets/calendar-clock.png\";\r\nimport { View, StyleSheet, Text, ScrollView } from 'react-native';\r\n\r\nexport function Reservas() {\r\n    const [reservas, setReservas] = useState([]); // Estado para armazenar a lista de reservas\r\n\r\n    // Simule a criação de algumas reservas (você pode preenchê-las com os dados reais)\r\n    useEffect(() => {\r\n        setReservas([\r\n            { nomeAmbiente: 'Sala de Reunião', data: '2023-10-16', horario: '10:00 - 11:00' },\r\n            { nomeAmbiente: 'Laboratório', data: '2023-10-16', horario: '13:00 - 14:00' },\r\n            // Adicione mais reservas conforme necessário\r\n        ]);\r\n    }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            reservas.map((reserva, index) => (\r\n                        <View key={index} style={styles.reservaContainer}>\r\n                            <Text style={styles.nomeAmbiente}>{reserva.nomeAmbiente}</Text>\r\n                            <Text style={styles.dataHorario}>{`Data: ${reserva.data}, Horário: ${reserva.horario}`}</Text>\r\n                            {/* Outras informações da reserva, se necessário */}\r\n                        </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"white\",\r\n    },\r\n    centralize: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    contentContainer: {\r\n        flexGrow: 1,\r\n    },\r\n    message: {\r\n        fontSize: 20,\r\n    },\r\n    reservaContainer: {\r\n        backgroundColor: '#f8f4f4', // Cor de fundo para a reserva\r\n        margin: 10,\r\n        borderRadius: 10, // Borda arredondada\r\n        padding: 10,\r\n    },\r\n    nomeAmbiente: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n    dataHorario: {\r\n        fontSize: 16,\r\n    },\r\n});\r\n\r\n// Função para adicionar uma reserva à lista (se necessário)\r\nfunction adicionarReserva(novaReserva) {\r\n    // Implemente a lógica para adicionar uma reserva à lista de reservas\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAInD,OAAO,SAASC,QAAQA,CAAA,EAAG;EACvB,IAAAC,SAAA,GAAgCV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAG5BV,SAAS,CAAC,YAAM;IACZa,WAAW,CAAC,CACR;MAAEC,YAAY,EAAE,iBAAiB;MAAEC,IAAI,EAAE,YAAY;MAAEC,OAAO,EAAE;IAAgB,CAAC,EACjF;MAAEF,YAAY,EAAE,aAAa;MAAEC,IAAI,EAAE,YAAY;MAAEC,OAAO,EAAE;IAAgB,CAAC,CAEhF,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OACIT,KAAA,CAACN,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAAC,oCAEf,EAAAb,KAAA,CAACN,IAAI;MAAagB,KAAK,EAAEC,MAAM,CAACG,gBAAiB;MAAAD,QAAA,GAC7Cf,IAAA,CAACF,IAAI;QAACc,KAAK,EAAEC,MAAM,CAACJ,YAAa;QAAAM,QAAA,EAAEE,OAAO,CAACR;MAAY,CAAO,CAAC,EAC/DT,IAAA,CAACF,IAAI;QAACc,KAAK,EAAEC,MAAM,CAACK,WAAY;QAAAH,QAAA,aAAWE,OAAO,CAACP,IAAI,sBAAcO,OAAO,CAACN;MAAO,CAAS,CAAC;IAAA,GAFvFQ,KAIL,CAAC;EAAA,CACjB,CAAC;AAEf;AAEA,IAAMN,MAAM,GAAGhB,UAAU,CAACuB,MAAM,CAAC;EAC7BN,SAAS,EAAE;IACPO,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACrB,CAAC;EACDC,UAAU,EAAE;IACRF,IAAI,EAAE,CAAC;IACPG,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB,CAAC;EACDC,gBAAgB,EAAE;IACdC,QAAQ,EAAE;EACd,CAAC;EACDC,OAAO,EAAE;IACLC,QAAQ,EAAE;EACd,CAAC;EACDb,gBAAgB,EAAE;IACdM,eAAe,EAAE,SAAS;IAC1BQ,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE;EACb,CAAC;EACDvB,YAAY,EAAE;IACVoB,QAAQ,EAAE,EAAE;IACZI,UAAU,EAAE;EAChB,CAAC;EACDf,WAAW,EAAE;IACTW,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC;AAGF,SAASK,gBAAgBA,CAACC,WAAW,EAAE,CAEvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}