{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = MaterialTopTabView;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _native = require(\"@react-navigation/native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNativeTabView = require(\"react-native-tab-view\");\nvar _MaterialTopTabBar = _interopRequireDefault(require(\"./MaterialTopTabBar\"));\nvar _excluded = [\"tabBar\", \"state\", \"navigation\", \"descriptors\", \"sceneContainerStyle\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction MaterialTopTabView(_ref) {\n  var _ref$tabBar = _ref.tabBar,\n    tabBar = _ref$tabBar === void 0 ? function (props) {\n      return React.createElement(_MaterialTopTabBar.default, props);\n    } : _ref$tabBar,\n    state = _ref.state,\n    navigation = _ref.navigation,\n    descriptors = _ref.descriptors,\n    sceneContainerStyle = _ref.sceneContainerStyle,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var _useTheme = (0, _native.useTheme)(),\n    colors = _useTheme.colors;\n  var renderTabBar = function renderTabBar(props) {\n    return tabBar(Object.assign({}, props, {\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors\n    }));\n  };\n  var focusedOptions = descriptors[state.routes[state.index].key].options;\n  return React.createElement(_reactNativeTabView.TabView, _extends({}, rest, {\n    onIndexChange: function onIndexChange(index) {\n      return navigation.dispatch(Object.assign({}, _native.CommonActions.navigate({\n        name: state.routes[index].name,\n        merge: true\n      }), {\n        target: state.key\n      }));\n    },\n    renderScene: function renderScene(_ref2) {\n      var route = _ref2.route;\n      return descriptors[route.key].render();\n    },\n    navigationState: state,\n    renderTabBar: renderTabBar,\n    renderLazyPlaceholder: function renderLazyPlaceholder(_ref3) {\n      var _ref5;\n      var _descriptors$route$ke, _descriptors$route$ke2;\n      var route = _ref3.route;\n      return (_ref5 = (_descriptors$route$ke = (_descriptors$route$ke2 = descriptors[route.key].options).lazyPlaceholder) === null || _descriptors$route$ke === void 0 ? void 0 : _descriptors$route$ke.call(_descriptors$route$ke2)) != null ? _ref5 : null;\n    },\n    lazy: function lazy(_ref4) {\n      var route = _ref4.route;\n      return descriptors[route.key].options.lazy === true;\n    },\n    lazyPreloadDistance: focusedOptions.lazyPreloadDistance,\n    swipeEnabled: focusedOptions.swipeEnabled,\n    animationEnabled: focusedOptions.animationEnabled,\n    onSwipeStart: function onSwipeStart() {\n      return navigation.emit({\n        type: 'swipeStart'\n      });\n    },\n    onSwipeEnd: function onSwipeEnd() {\n      return navigation.emit({\n        type: 'swipeEnd'\n      });\n    },\n    sceneContainerStyle: [{\n      backgroundColor: colors.background\n    }, sceneContainerStyle]\n  }));\n}","map":{"version":3,"names":["_native","require","React","_interopRequireWildcard","_reactNativeTabView","_MaterialTopTabBar","_interopRequireDefault","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","MaterialTopTabView","_ref","_ref$tabBar","tabBar","props","createElement","MaterialTopTabBar","state","navigation","descriptors","sceneContainerStyle","rest","_objectWithoutProperties2","_useTheme","useTheme","colors","renderTabBar","assign","focusedOptions","routes","index","options","TabView","_extends","onIndexChange","dispatch","CommonActions","navigate","name","merge","target","renderScene","_ref2","route","render","navigationState","renderLazyPlaceholder","_ref3","_ref5","_descriptors$route$ke","_descriptors$route$ke2","lazyPlaceholder","lazy","_ref4","lazyPreloadDistance","swipeEnabled","animationEnabled","onSwipeStart","emit","type","onSwipeEnd","backgroundColor","background"],"sources":["C:\\Users\\gbaol\\SA_2023_3B_SesiSenai_Ambientes\\app\\node_modules\\@react-navigation\\material-top-tabs\\src\\views\\MaterialTopTabView.tsx"],"sourcesContent":["import {\n  CommonActions,\n  ParamListBase,\n  Route,\n  TabNavigationState,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { SceneRendererProps, TabView } from 'react-native-tab-view';\n\nimport type {\n  MaterialTopTabBarProps,\n  MaterialTopTabDescriptorMap,\n  MaterialTopTabNavigationConfig,\n  MaterialTopTabNavigationHelpers,\n} from '../types';\nimport MaterialTopTabBar from './MaterialTopTabBar';\n\ntype Props = MaterialTopTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: MaterialTopTabNavigationHelpers;\n  descriptors: MaterialTopTabDescriptorMap;\n};\n\nexport default function MaterialTopTabView({\n  tabBar = (props: MaterialTopTabBarProps) => <MaterialTopTabBar {...props} />,\n  state,\n  navigation,\n  descriptors,\n  sceneContainerStyle,\n  ...rest\n}: Props) {\n  const { colors } = useTheme();\n\n  const renderTabBar = (props: SceneRendererProps) => {\n    return tabBar({\n      ...props,\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors,\n    });\n  };\n\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  return (\n    <TabView<Route<string>>\n      {...rest}\n      onIndexChange={(index) =>\n        navigation.dispatch({\n          ...CommonActions.navigate({\n            name: state.routes[index].name,\n            merge: true,\n          }),\n          target: state.key,\n        })\n      }\n      renderScene={({ route }) => descriptors[route.key].render()}\n      navigationState={state}\n      renderTabBar={renderTabBar}\n      renderLazyPlaceholder={({ route }) =>\n        descriptors[route.key].options.lazyPlaceholder?.() ?? null\n      }\n      lazy={({ route }) => descriptors[route.key].options.lazy === true}\n      lazyPreloadDistance={focusedOptions.lazyPreloadDistance}\n      swipeEnabled={focusedOptions.swipeEnabled}\n      animationEnabled={focusedOptions.animationEnabled}\n      onSwipeStart={() => navigation.emit({ type: 'swipeStart' })}\n      onSwipeEnd={() => navigation.emit({ type: 'swipeEnd' })}\n      sceneContainerStyle={[\n        { backgroundColor: colors.background },\n        sceneContainerStyle,\n      ]}\n    />\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}